:root {
  --primary: rgba(16, 16, 16, 1);
  --secondary: rgba(255, 255, 255, 0.1);
  --tertiary: rgba(255, 255, 255, 0.25);
  --accent: rgba(255, 255, 255, 0.8);
}
.clr-tertiary,
.clr-tertiary > * {
  color: var(--tertiary);
}

::-webkit-scrollbar {
  display: none;
}
body {
  background-color: var(--primary);
  margin: 0px;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}
* {
  cursor: default;
}
.tasks > *::before {
  white-space: pre;
}

p {
  font-size: 1rem;
  line-height: 2rem;
  color: var(--accent);
  font-weight: 200;
  font-family: "IBM Plex Mono", monospace;
  margin: 0%;
}
.cont {
  width: 25rem;
}
.line {
  height: 0.375rem;
  height: 0.5rem;
  width: 25%;
  background-color: var(--secondary);
  border-right: 1px solid var(--accent);
}
.box {
  border: 1px solid var(--secondary);
  height: 37.5rem;
  padding: 1rem;
  overflow-y: hidden;
  display: flex;
  flex-direction: column;
}
textarea {
  background-color: var(--primary);
  resize: none;
  width: 100%;
  border: none;
  padding: 0px;
  flex-grow: 2;
  cursor: text;

  color: var(--tertiary);
  caret-color: var(--accent);
  font-weight: 200;
  font-size: 1rem;
  line-height: 2rem;
}
::placeholder {
  color: var(--tertiary);
  font-weight: 200;
  font-size: 1rem;
  line-height: 2rem;
}
textarea:focus {
  outline: none;
}

/* Task States */

.task::before {
  content: "- [ ] ";
}
.task-hover {
  cursor: pointer;
}
.task-hover::before {
  content: "  [-] ";
}
.task-clicked {
  color: var(--tertiary);
  cursor: pointer;
}
.task-clicked::before {
  content: "- [X] ";
  color: var(--tertiary);
}